glob arr _mm_head 100000 char =;
glob arr _blocks_info 100000 int =;
glob int _head = 0;

function memset ptr char buffer; int val; int size; {
    int index = 0;
    while index < size; {
        buffer[index] = val;
        index = index + 1;
    }

    return 1;
}

function malloc int size; {
    if size > 0; {
        ptr int curr_mem = _mm_head;
        int block_index = 0;
        while block_index < 100000; {
            if _blocks_info[block_index] == 0; {
                _blocks_info[block_index] = 1;
                _blocks_info[block_index + 1] = size;
                _blocks_info[block_index + 2] = curr_mem;
                return curr_mem;
            }

            curr_mem = curr_mem + _blocks_info[block_index + 1];
            block_index = block_index + 3;
        }
    }

    return -1;
}

function free ptr int mem; {
    int block_index = 0;
    while block_index < 100000; {
        if _blocks_info[block_index + 2] == mem; {
            _blocks_info[block_index] = 0;
            return 1;
        }

        block_index = block_index + 3;
    }

    return 1;
}
